class Solution
{
    public ArrayList<Integer> bfsOfGraph(int V, ArrayList<ArrayList<Integer>> adj)
    {
        // Code here
        ArrayList<Integer> ans=new ArrayList<Integer>();
        boolean visited[]=new boolean[V];
        Queue<Integer> queue=new LinkedList<Integer>();
        queue.add(0);
        ans.add(0);
        visited[0]=true;
        int level=0;
        while(!queue.isEmpty()){
            int s=queue.size();
            level++;
            for(int i=0;i<s;i++){
                int current=queue.poll();
                for(Integer neighbour:adj.get(current)){
                    if(!visited[neighbour]){
                        visited[neighbour]=true;
                        queue.add(neighbour);
                        ans.add(neighbour);
                    }
                }
            }
        }
        return ans;
    }
}
